{"version":3,"sources":["api/users.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","TodoInfo","title","completed","className","UserInfo","user","TodoList","todoList","map","todo","preparedTodos","userId","usersFromServer","find","App","useState","todos","setTodos","titleValue","setTitleValue","chosenUser","setChosenUser","hasTitleError","setTitleError","hasUserError","setUserError","action","method","onSubmit","event","preventDefault","curUser","newTodo","length","curTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c34bf88.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\ntype Props = {\n  title: string,\n  completed: boolean,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, completed }) => (\n  <>\n    <h2 className=\"list__item-title\" data-cy=\"title\">{title}</h2>\n    <p data-cy=\"status\">\n      {completed\n        ? 'Complited'\n        : 'The task is not finished'}\n    </p>\n  </>\n);\n","import React from 'react';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    {user && (\n      <>\n        <h2 className=\"list__user-name\" data-cy=\"username\">{user.name}</h2>\n        <h3\n          className=\"list__mail\"\n          data-cy=\"email\"\n        >\n          {user.email}\n        </h3>\n      </>\n    )}\n  </>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todoList: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todoList }) => (\n  <ul className=\"list\">\n    {todoList.map(todo => (\n      <li className=\"list__item\" key={todo.id}>\n        <UserInfo user={todo.user} />\n        <TodoInfo\n          title={todo.title}\n          completed={todo.completed}\n        />\n      </li>\n    ))}\n  </ul>\n);\n","import React, { FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport './App.scss';\n\nconst preparedTodos = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId) || null,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState([...preparedTodos]);\n  const [titleValue, setTitleValue] = useState('');\n  const [chosenUser, setChosenUser] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const user = usersFromServer\n      .find(curUser => curUser.name === chosenUser) || null;\n\n    const newTodo = {\n      userId: user ? user.id : 0,\n      id: todos.length + 1,\n      title: titleValue,\n      completed: false,\n      user: user || null,\n    };\n\n    setTitleError(!titleValue);\n    setUserError(!chosenUser);\n\n    if (!titleValue || !chosenUser) {\n      return;\n    }\n\n    setTodos(curTodos => [newTodo, ...curTodos]);\n    setTitleValue('');\n    setChosenUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <form\n        className=\"field\"\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => onSubmit(event)}\n      >\n        <div className=\"field__wrapper\">\n          <input\n            className=\"field__title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleValue}\n            onChange={(event) => {\n              setTitleError(false);\n\n              setTitleValue(event.target.value);\n            }}\n\n          />\n          {hasTitleError && (\n            <span className=\"error\"> Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field__wrapper\">\n          <select\n            className=\"field__select\"\n            data-cy=\"userSelect\"\n            value={chosenUser}\n            onChange={(event) => {\n              setUserError(false);\n\n              setChosenUser(event.target.value);\n            }}\n          >\n            <option\n              value={chosenUser}\n              disabled\n            >\n              Chose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\"> Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          className=\"field__button\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todoList={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}